"""create_initial_analytics_tables_upload_repo_website

Revision ID: 0a9ada7d3f8c
Revises: 
Create Date: 2025-05-17 12:36:01.153263

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # Import postgresql for specific types

# revision identifiers, used by Alembic.
revision: str = '0a9ada7d3f8c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - JMA: ADJUSTED MANUALLY ###

    # --- Repo Job Analytics ---
    op.create_table('repo_job_analytics',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('job_uuid', postgresql.UUID(as_uuid=True), nullable=False), # ADJUSTED
        sa.Column('job_start_time', sa.DateTime(), nullable=False),
        sa.Column('job_end_time', sa.DateTime(), nullable=True),
        sa.Column('final_status', sa.String(length=20), nullable=True),      # ADJUSTED
        sa.Column('error_message', sa.TEXT(), nullable=True),
        sa.Column('error_type', sa.String(length=100), nullable=True),     # ADJUSTED
        sa.Column('user_ip', postgresql.INET(), nullable=True),
        sa.Column('user_region', sa.String(length=255), nullable=True),    # ADJUSTED
        sa.Column('output_size_bytes', postgresql.BIGINT(), nullable=True), # ADJUSTED (was already BIGINT)
        sa.Column('total_processing_duration_seconds', sa.Float(), nullable=True),
        sa.Column('repo_url', sa.TEXT(), nullable=True),
        sa.Column('cloned_repo_name', sa.String(length=255), nullable=True),# ADJUSTED
        sa.Column('clone_successful', sa.Boolean(), nullable=True),
        sa.Column('cloned_repo_size_bytes', postgresql.BIGINT(), nullable=True),# ADJUSTED (was already BIGINT)
        sa.Column('git_clone_duration_seconds', sa.Float(), nullable=True),
        sa.Column('code_analysis_duration_seconds', sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repo_job_analytics_error_type'), 'repo_job_analytics', ['error_type'], unique=False)
    op.create_index(op.f('ix_repo_job_analytics_final_status'), 'repo_job_analytics', ['final_status'], unique=False)
    op.create_index(op.f('ix_repo_job_analytics_job_uuid'), 'repo_job_analytics', ['job_uuid'], unique=True)

    # --- Upload Job Analytics ---
    op.create_table('upload_job_analytics',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('job_uuid', postgresql.UUID(as_uuid=True), nullable=False), # ADJUSTED
        sa.Column('job_start_time', sa.DateTime(), nullable=False),
        sa.Column('job_end_time', sa.DateTime(), nullable=True),
        sa.Column('final_status', sa.String(length=20), nullable=True),      # ADJUSTED
        sa.Column('error_message', sa.TEXT(), nullable=True),
        sa.Column('error_type', sa.String(length=100), nullable=True),     # ADJUSTED
        sa.Column('user_ip', postgresql.INET(), nullable=True),
        sa.Column('user_region', sa.String(length=255), nullable=True),    # ADJUSTED
        sa.Column('output_size_bytes', postgresql.BIGINT(), nullable=True), # ADJUSTED (was already BIGINT)
        sa.Column('total_processing_duration_seconds', sa.Float(), nullable=True),
        sa.Column('original_folder_name_root', sa.String(length=255), nullable=True), # ADJUSTED
        sa.Column('initial_files_selected_count', sa.Integer(), nullable=True),
        sa.Column('filtered_files_processed_count', sa.Integer(), nullable=True),
        sa.Column('upload_folder_size_bytes', postgresql.BIGINT(), nullable=True),   # ADJUSTED (was already BIGINT)
        sa.Column('backend_upload_handling_duration_seconds', sa.Float(), nullable=True),
        sa.Column('code_analysis_duration_seconds', sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_upload_job_analytics_error_type'), 'upload_job_analytics', ['error_type'], unique=False)
    op.create_index(op.f('ix_upload_job_analytics_final_status'), 'upload_job_analytics', ['final_status'], unique=False)
    op.create_index(op.f('ix_upload_job_analytics_job_uuid'), 'upload_job_analytics', ['job_uuid'], unique=True)

    # --- Website Job Analytics ---
    op.create_table('website_job_analytics',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('job_uuid', postgresql.UUID(as_uuid=True), nullable=False), # ADJUSTED
        sa.Column('job_start_time', sa.DateTime(), nullable=False),
        sa.Column('job_end_time', sa.DateTime(), nullable=True),
        sa.Column('final_status', sa.String(length=20), nullable=True),      # ADJUSTED
        sa.Column('error_message', sa.TEXT(), nullable=True),
        sa.Column('error_type', sa.String(length=100), nullable=True),     # ADJUSTED
        sa.Column('user_ip', postgresql.INET(), nullable=True),
        sa.Column('user_region', sa.String(length=255), nullable=True),    # ADJUSTED
        sa.Column('output_size_bytes', postgresql.BIGINT(), nullable=True), # ADJUSTED (was already BIGINT)
        sa.Column('total_processing_duration_seconds', sa.Float(), nullable=True),
        sa.Column('website_url', sa.TEXT(), nullable=True),
        sa.Column('crawl_max_depth_setting', sa.Integer(), nullable=True),
        sa.Column('crawl_max_pages_setting', sa.Integer(), nullable=True),
        sa.Column('crawl_stay_on_domain_setting', sa.Boolean(), nullable=True),
        sa.Column('crawl_include_patterns_setting', sa.TEXT(), nullable=True),
        sa.Column('crawl_exclude_patterns_setting', sa.TEXT(), nullable=True),
        sa.Column('crawl_keywords_setting', sa.TEXT(), nullable=True),
        sa.Column('pages_actually_crawled_count', sa.Integer(), nullable=True),
        sa.Column('website_crawl_duration_seconds', sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_website_job_analytics_error_type'), 'website_job_analytics', ['error_type'], unique=False)
    op.create_index(op.f('ix_website_job_analytics_final_status'), 'website_job_analytics', ['final_status'], unique=False)
    op.create_index(op.f('ix_website_job_analytics_job_uuid'), 'website_job_analytics', ['job_uuid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - JMA: ORDER VERIFIED ###
    op.drop_index(op.f('ix_website_job_analytics_job_uuid'), table_name='website_job_analytics')
    op.drop_index(op.f('ix_website_job_analytics_final_status'), table_name='website_job_analytics')
    op.drop_index(op.f('ix_website_job_analytics_error_type'), table_name='website_job_analytics')
    op.drop_table('website_job_analytics')
    
    op.drop_index(op.f('ix_upload_job_analytics_job_uuid'), table_name='upload_job_analytics')
    op.drop_index(op.f('ix_upload_job_analytics_final_status'), table_name='upload_job_analytics')
    op.drop_index(op.f('ix_upload_job_analytics_error_type'), table_name='upload_job_analytics')
    op.drop_table('upload_job_analytics')
    
    op.drop_index(op.f('ix_repo_job_analytics_job_uuid'), table_name='repo_job_analytics')
    op.drop_index(op.f('ix_repo_job_analytics_final_status'), table_name='repo_job_analytics')
    op.drop_index(op.f('ix_repo_job_analytics_error_type'), table_name='repo_job_analytics')
    op.drop_table('repo_job_analytics')
    # ### end Alembic commands ###